<!DOCTYPE html>
<html lang="zh-CN">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>欢迎来到幻想乡</title>
<style>
  :root{ --corner-w:120px }
  *{box-sizing:border-box}
  html,body{height:100%;margin:0;font-family:"Microsoft YaHei","PingFang SC",Arial,sans-serif;background:#0b0710;color:#fff}
  /* 布局与百叶窗（5 片） */
  .container{display:flex;height:100vh;align-items:stretch;position:relative;overflow:hidden}
  .blind{flex:1;background-size:cover;background-position:center;transition:all .5s ease;filter:brightness(.78)}
  .blind:hover{flex:3;filter:brightness(1)}
  /* 右下角保持的角落图 */
  .corner{position:absolute;right:12px;bottom:12px;width:var(--corner-w)}
  .corner img{width:100%;height:auto;border-radius:8px;box-shadow:0 6px 18px rgba(0,0,0,.6)}
  /* 左下角文字按钮 */
  .music-control{
    position:absolute;left:12px;bottom:12px;padding:6px 10px;
    background:rgba(0,0,0,0.55);color:#ffb6c1;font-size:16px;border-radius:6px;
    cursor:pointer;user-select:none;transition: transform .12s, box-shadow .18s, background .15s;
  }
  .music-control:hover{ transform:translateY(-2px); background: rgba(255,20,147,0.14) }
  .music-control.playing{ box-shadow: 0 8px 30px rgba(255,182,193,0.18) }
  .music-control.flash{ animation:flash 650ms ease }
  @keyframes flash{ 0%{box-shadow:0 0 0 rgba(255,182,193,0)} 50%{box-shadow:0 0 26px rgba(255,182,193,.6)} 100%{box-shadow:0 0 0 rgba(255,182,193,0)} }

  /* 悬罩层（欢迎 + 进入按钮） */
  #overlay{
    position:fixed;left:0;top:0;width:100%;height:100%;background:rgba(0,0,0,0.95);
    display:flex;align-items:center;justify-content:center;z-index:9999;
  }
  .overlay-content{ text-align:center }
  .overlay-content h1{
    color:pink;font-size:40px;margin:0 0 18px 0;
    text-shadow:0 0 10px #ff69b4, 0 0 20px #ff1493;
  }
  #enterBtn{
    padding:10px 22px;border-radius:8px;border:none;background:linear-gradient(90deg,#ff9fc7,#ff6fb4);
    color:#fff;font-size:18px;cursor:pointer;box-shadow:0 8px 30px rgba(255,105,180,0.12);
  }
  #enterBtn:hover{ transform:translateY(-3px) }

  /* 樱花样式（纯 CSS 绘制） */
  .sakura{
    position:fixed;top:-12vh;pointer-events:none;border-radius:50% 45% 40% 60% / 60% 50% 40% 40%;
    background: radial-gradient(circle at 30% 30%, #ffe1ea 0 30%, #ff9fc7 31% 70%);
    transform-origin:center;will-change:transform,opacity;
    opacity:.95; z-index:800;
    animation:fall linear forwards;
  }
  @keyframes fall{
    0%{ transform: translateY(-10vh) rotate(0deg); opacity:1 }
    100%{ transform: translateY(110vh) rotate(360deg); opacity:0 }
  }

  /* 隐藏原生 audio 元素（播放器由脚本控制） */
  audio{ display:none }

  /* 响应式 */
  @media (max-width:900px){
    .corner{ right:8px; bottom:8px; width:90px }
    .music-control{ left:8px; bottom:8px; font-size:14px; padding:5px 8px }
    .overlay-content h1{ font-size:28px }
  }
</style>
</head>
<body>
  <!-- 遮罩层：用户必须点“进入”以解锁有声播放 -->
  <div id="overlay" role="dialog" aria-modal="true">
    <div class="overlay-content">
      <h1>欢迎来到幻想乡</h1>
      <button id="enterBtn">进入</button>
    </div>
  </div>

  <!-- 主容器与百叶窗（5片） -->
  <div class="container" id="container">
    <div class="blind" id="b0" style="background-image:url('image/bg1.jpg')"></div>
    <div class="blind" id="b1" style="background-image:url('image/bg2.jpg')"></div>
    <div class="blind" id="b2" style="background-image:url('image/bg3.jpg')"></div>
    <div class="blind" id="b3" style="background-image:url('image/bg4.jpg')"></div>
    <div class="blind" id="b4" style="background-image:url('image/bg5.jpg')"></div>

    <!-- 右下角角落图（保留） -->
    <div class="corner"><img id="cornerImg" src="image/corner.jpg" alt="corner"></div>

    <!-- 左下角音乐切换（文字） -->
    <div class="music-control" id="musicControl" role="button" aria-pressed="false">少女祈祷中</div>
  </div>

  <!-- background audio (由脚本控制) -->
  <audio id="bgm" preload="auto"></audio>

<script>
/*
  使用说明：
  - 将此文件保存为 index.html
  - 确保项目目录结构：
    index.html
    /image/bg1.jpg ... bg5.jpg, corner.jpg
    /music/bgm1.mp3, bgm2.mp3, bgm3.mp3 ...
  - 用 Live Server（或简单 HTTP 服务器）打开更可靠（避免 file:// 限制）
*/

document.addEventListener('DOMContentLoaded', function() {
  // ===== 配置区（按需修改路径/曲目/图片） =====
  const musicList = [
    'music/bgm1.mp3',
    'music/bgm2.mp3',
    'music/bgm3.mp3'
  ];
  const bgImgList = [
    'image/bg1.jpg',
    'image/bg2.jpg',
    'image/bg3.jpg',
    'image/bg4.jpg',
    'image/bg5.jpg'
  ];
  // ============================================

  const overlay = document.getElementById('overlay');
  const enterBtn = document.getElementById('enterBtn');
  const bgm = document.getElementById('bgm');
  const musicControl = document.getElementById('musicControl');

  let currentIndex = -1;
  let sakuraTimer = null;

  // 资源预检（console 提示）
  function checkResources() {
    bgImgList.forEach(p => {
      const img = new Image();
      img.onload = () => {};
      img.onerror = () => console.warn('背景图未找到：', p);
      img.src = p;
    });
    musicList.forEach(m => {
      const a = document.createElement('audio');
      a.onerror = () => console.warn('音乐未找到或不支持：', m);
      a.src = m;
    });
    const cornerTest = new Image();
    cornerTest.onerror = () => console.warn('corner.jpg 未找到： image/corner.jpg');
    cornerTest.src = 'image/corner.jpg';
  }
  checkResources();

  // 随机选择一首（避免和当前相同）
  function chooseNextIndex() {
    if (!musicList || musicList.length === 0) return -1;
    if (musicList.length === 1) return 0;
    let idx;
    do { idx = Math.floor(Math.random() * musicList.length); }
    while (idx === currentIndex);
    return idx;
  }

  function updateMusicControlPlayingState(isPlaying) {
    musicControl.classList.toggle('playing', !!isPlaying);
    musicControl.setAttribute('aria-pressed', !!isPlaying);
  }

  // 实际播放函数
  function playAt(idx) {
    if (idx < 0 || idx >= musicList.length) return;
    currentIndex = idx;
    const url = musicList[idx];
    if (!url) return;
    // 如果 src 与当前相同，不强制重设（防止部分浏览器卡顿）
    if (bgm.src.indexOf(url) === -1) bgm.src = url;
    bgm.currentTime = 0;
    bgm.loop = false; // 使用 ended 事件切换下一首
    bgm.play().then(() => {
      updateMusicControlPlayingState(true);
    }).catch(err => {
      // 若播放被拒绝（在未交互等场景），提示到 console；用户点击 enter 或控制按钮会触发播放
      console.warn('播放被阻止或失败：', err);
      updateMusicControlPlayingState(false);
    });
  }

  function playRandomMusic() {
    const idx = chooseNextIndex();
    if (idx === -1) return;
    // 视觉反馈
    musicControl.classList.add('flash');
    setTimeout(()=> musicControl.classList.remove('flash'), 650);
    playAt(idx);
  }

  // enter 按钮：关闭遮罩并开始播放（用户交互解锁）
  enterBtn.addEventListener('click', function() {
    // 隐藏遮罩（淡出）
    overlay.style.transition = 'opacity 600ms ease';
    overlay.style.opacity = '0';
    overlay.addEventListener('transitionend', function once(){ overlay.style.display='none'; overlay.removeEventListener('transitionend', once); });

    // 取消静音并播放一首
    bgm.muted = false;
    playRandomMusic();

    // 启动樱花
    startSakura();
  });

  // 左下角按钮切歌
  musicControl.addEventListener('click', function() {
    // 如果还没有播放任何曲目，直接播放一首
    if (currentIndex === -1 || bgm.paused) {
      bgm.muted = false;
      playRandomMusic();
      return;
    }
    // 否则切换下一首
    playRandomMusic();
  });

  // 曲目结束自动换下一首
  bgm.addEventListener('ended', function() {
    playRandomMusic();
  });

  // 首次任意用户交互（pointerdown）也尝试解锁静音播放（保险）
  function onFirstInteraction() {
    if (bgm && bgm.paused && currentIndex === -1) {
      bgm.muted = false;
      playRandomMusic();
    } else if (bgm && !bgm.paused && bgm.muted) {
      bgm.muted = false;
      updateMusicControlPlayingState(true);
    }
    document.removeEventListener('pointerdown', onFirstInteraction);
  }
  document.addEventListener('pointerdown', onFirstInteraction, { once: true });

  // 作为回退：尝试静音 autoplay（多数浏览器允许静音自动播放）
  (function tryMutedAutoplay(){
    if (!musicList || musicList.length===0) return;
    try {
      bgm.muted = true;
      bgm.src = musicList[Math.floor(Math.random()*musicList.length)];
      bgm.play().then(()=> {
        // 静音自动播放成功（用户交互后会取消静音）
        console.log('静音自动播放成功（将于交互后恢复声音）');
      }).catch(()=> {
        // 被拒绝也不影响：enter 点击会触发播放
        console.log('静音自动播放被拒绝或失败（无需担心）');
      });
    } catch(e){}
  })();

  // ===== 樱花效果 =====
  function createSakura() {
    const s = document.createElement('div');
    s.className = 'sakura';
    const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);
    s.style.left = (Math.random() * 100) + 'vw';
    const size = 12 + Math.random() * 20; // 12 - 32 px
    s.style.width = size + 'px';
    s.style.height = Math.round(size * 0.9) + 'px';
    s.style.opacity = (0.4 + Math.random() * 0.7).toString();
    const duration = (5 + Math.random() * 4).toFixed(2) + 's';
    s.style.animationDuration = duration;
    s.style.transform = `rotate(${Math.random()*90 - 45}deg)`;
    document.body.appendChild(s);
    // 移除节点
    setTimeout(()=> { try{ s.remove(); } catch(e){} }, (parseFloat(duration)*1000) + 800);
  }
  function startSakura() {
    if (sakuraTimer) return;
    sakuraTimer = setInterval(createSakura, 280);
  }
  // 如果页面已经进入（比如刷新后），overlay 已隐藏也应启动
  if (overlay.style.display === 'none') startSakura();

  // 清理
  window.addEventListener('beforeunload', function(){ if (sakuraTimer) clearInterval(sakuraTimer); });

  // 最后：如果你想页面一刷新就随机设置五块背景（可选）
  (function syncBackgrounds(){
    const blinds = document.querySelectorAll('.blind');
    blinds.forEach((el, i) => {
      if (bgImgList[i]) el.style.backgroundImage = `url('${bgImgList[i]}')`;
    });
  })();

  // 控制台提示一下常见故障排查
  console.log('提示：若无声或资源未加载，请在浏览器控制台查看 Failed to load resource 的报错；推荐用 Live Server 打开页面。');
});
</script>
</body>
</html>
